"0",""
"0","#res3=ts(lm(detrend2~time(detrend2))$residual,start=1974,frequency=12)"
"0","#ts.plot(res3,col=""grey"")"
"0","#Poly Regression on t"
"0","lm(detrend2~time(detrend2)+ I(time(detrend2))^2 ) "
"1","
Call:
"
"1",""
"1","lm(formula = detrend2 ~ time(detrend2) + I(time(detrend2))^2)"
"1",""
"1","

"
"1","Coefficients:
"
"1","      (Intercept)  "
"1","   time(detrend2)  "
"1","I(time(detrend2))  "
"1","
"
"1","        -514994.3  "
"1","            260.5  "
"1","               NA  "
"1","
"
"1","
"
"0","detrend_poly <- function(data_ts, P) {"
"0","  # Generate the polynomial terms for the formula"
"0","  poly_terms <- paste(""I(time(data_ts)^"", 1:P, "")"", collapse="" + "")"
"0","  # Create the formula for the linear model"
"0","  formula_str <- paste(""data_ts ~"", poly_terms)"
"0","  formula_obj <- as.formula(formula_str)"
"0","  "
"0","  # Fit the linear model and extract the fitted values"
"0","  fit <- lm(formula_obj)"
"0","  fitted_values <- ts(fit$fitted.values, start=start(data_ts), frequency=frequency(data_ts))"
"0","  "
"0","  # Detrend the original time series by subtracting the fitted values"
"0","  detrended_data <- data_ts - fitted_values"
"0","  "
"0","  return(list(detrended_data = detrended_data, fit = fit))"
"0","}"
"0",""
"0","# Example usage:"
"0","#Assume data_ts is your time series data"
"0","P = 2  # for a quadratic model"
"0","result = detrend_poly(accident, P)"
"0","ts.plot(result$detrended_data, col=""grey"")"
"0",""
